var nconf             = require('nconf');
var fs 				  = require('fs');
var S 				  = require('string');
var path 			  = require('path');

var ClientCookieUtils = module.exports = {
	clientID : "",
	cookiePath : './config/client.json',
	isClientCookiePresent : function (){
		nconf.argv().env();
		nconf.file({ file: ClientCookieUtils.cookiePath });

		if (!nconf.get("_id")){
			return false;
		} else {
			return true;
		}
	},
	getID : function(){
		return ClientCookieUtils.getClientCookie()._id;
	},
	getClientCookie : function(){
		return JSON.parse(fs.readFileSync(ClientCookieUtils.cookiePath));
	},
	writeClientCookie : function(data){
		console.log("Write client cookie :");
		console.log("dirname : "+__dirname);
		var p = path.join(__dirname,ClientCookieUtils.cookiePath);
		console.log("p : "+p);

		fs.writeFileSync(p,JSON.stringify(data));
	},
	addCam : function (cam){
		var client = ClientCookieUtils.getClientCookie();
		client.camFeeds.push(cam);
		ClientCookieUtils.writeClientCookie(client);
		return true;
	},
	removeCam : function (cam){
		var client = ClientCookieUtils.getClientCookie();
		var index;
		var toRemove = client.camFeeds.filter(function(o){
			if (o.hostname == cam.hostname && o.rtmpUri == cam.rtmpUri){
				index = client.camFeeds.indexOf(o);
				return true;
			} else {
				return false;
			}
        });

		if (index != -1 ){
        	client.camFeeds.splice(index,1);
        	ClientCookieUtils.writeClientCookie(client);
        	return true;
    	} else {
    		return false;
    	}
	},
	getCams : function(){
		var client = ClientCookieUtils.getClientCookie();
		return client.camFeeds;
	},
	getNewFeedName : function(){
		var feedName = "";
		var client = ClientCookieUtils.getClientCookie();
		var index = client.camFeeds.length;
		feedName = S(client.name).slugify() + "-" + index;
		return feedName;
	}
}